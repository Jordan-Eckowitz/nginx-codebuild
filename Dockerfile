# Dockerfile
# By calling this 'builder' we are tagging this stage as 'builder'
FROM node:alpine as builder

WORKDIR '/app'

COPY package.json .
RUN npm set strict-ssl false
RUN npm install

COPY . .

# Note that this is a RUN statement and not CMD.
# The reason is that RUN is used to RUN a process in order to compile an image.
# CMD is used to execute the image inside a container after the image has been built.
# We are not executing this image after creation hence the use of RUN and not CMD.
RUN npm run build

FROM nginx
# We have to expose port 80 for AWS Elastic Beanstalk.
EXPOSE 80
# --from=builder -> copying from builder stage tagged above.
# /app/build -> location of the build folder generated by NPM.
# /usr/share/nginx/html -> standard NGINX location for static content (see Docker Hub: https://hub.docker.com/_/nginx/).
COPY --from=builder /app/build /usr/share/nginx/html